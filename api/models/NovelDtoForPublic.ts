/* tslint:disable */
/* eslint-disable */
/**
 * RanobeNet
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChapterDtoForPublic,
    ChapterDtoForPublicFromJSON,
    ChapterDtoForPublicFromJSONTyped,
    ChapterDtoForPublicToJSON,
} from './ChapterDtoForPublic';

/**
 * 
 * @export
 * @interface NovelDtoForPublic
 */
export interface NovelDtoForPublic {
    /**
     * 
     * @type {number}
     * @memberof NovelDtoForPublic
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof NovelDtoForPublic
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof NovelDtoForPublic
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof NovelDtoForPublic
     */
    author: string;
    /**
     * 
     * @type {Array<ChapterDtoForPublic>}
     * @memberof NovelDtoForPublic
     */
    chapters: Array<ChapterDtoForPublic>;
}

export function NovelDtoForPublicFromJSON(json: any): NovelDtoForPublic {
    return NovelDtoForPublicFromJSONTyped(json, false);
}

export function NovelDtoForPublicFromJSONTyped(json: any, ignoreDiscriminator: boolean): NovelDtoForPublic {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'],
        'author': json['author'],
        'chapters': ((json['chapters'] as Array<any>).map(ChapterDtoForPublicFromJSON)),
    };
}

export function NovelDtoForPublicToJSON(value?: NovelDtoForPublic | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'description': value.description,
        'author': value.author,
        'chapters': ((value.chapters as Array<any>).map(ChapterDtoForPublicToJSON)),
    };
}

