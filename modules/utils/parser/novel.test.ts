import { parse } from './novel';

const novel1 = `カクヨム互換

冴えない彼女《ヒロイン》の育てかた
あいつの｜etc《えとせとら》
この際｜紅蓮の炎《ヘルフレイム》に焼かれて果てろ！

ノベルアップ互換
わたし、ノベラといいます。女神（めがみ）やってます！
わたし、ノベラといいます。女神｜（めがみ）やってます！
`;

test(`ルビを変換できる`, () => {
  expect(parse(novel1)).toStrictEqual([
    ['カクヨム互換'],
    [],
    ['冴えない', { type: 'ruby', text: '彼女', yomi: 'ヒロイン' }, 'の育てかた'],
    ['あいつの', { type: 'ruby', text: 'etc', yomi: 'えとせとら' }],
    ['この際', { type: 'ruby', text: '紅蓮の炎', yomi: 'ヘルフレイム' }, 'に焼かれて果てろ！'],
    [],
    ['ノベルアップ互換'],
    ['わたし、ノベラといいます。', { type: 'ruby', text: '女神', yomi: 'めがみ' }, 'やってます！'],
    ['わたし、ノベラといいます。女神', '（めがみ）', 'やってます！'],
    [],
  ]);
});

const novel2 = 'おじいさんは山へ《《柴刈り》》に出かけました。';

test(`傍点を変換できる`, () => {
  expect(parse(novel2)).toStrictEqual([['おじいさんは山へ', { type: 'bouten', text: '柴刈り' }, 'に出かけました。']]);
});
const novel3 = `
おじいさんは山へ《《柴刈り》》に出かけました。
`;

test(`空行を変換できる`, () => {
  expect(parse(novel3)).toStrictEqual([
    [],
    ['おじいさんは山へ', { type: 'bouten', text: '柴刈り' }, 'に出かけました。'],
    [],
  ]);
});
