/* tslint:disable */
/* eslint-disable */
/**
 * RanobeNet
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserDtoForPublicListing,
    UserDtoForPublicListingFromJSON,
    UserDtoForPublicListingFromJSONTyped,
    UserDtoForPublicListingToJSON,
} from './UserDtoForPublicListing';

/**
 * 
 * @export
 * @interface UserDtoForPublicListingPagedList
 */
export interface UserDtoForPublicListingPagedList {
    /**
     * 
     * @type {number}
     * @memberof UserDtoForPublicListingPagedList
     */
    readonly currentPage: number;
    /**
     * 
     * @type {number}
     * @memberof UserDtoForPublicListingPagedList
     */
    readonly totalPages: number;
    /**
     * 
     * @type {number}
     * @memberof UserDtoForPublicListingPagedList
     */
    pageSize: number;
    /**
     * 
     * @type {number}
     * @memberof UserDtoForPublicListingPagedList
     */
    readonly totalCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserDtoForPublicListingPagedList
     */
    readonly hasPrevious: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserDtoForPublicListingPagedList
     */
    readonly hasNext: boolean;
    /**
     * 
     * @type {Array<UserDtoForPublicListing>}
     * @memberof UserDtoForPublicListingPagedList
     */
    items: Array<UserDtoForPublicListing>;
}

export function UserDtoForPublicListingPagedListFromJSON(json: any): UserDtoForPublicListingPagedList {
    return UserDtoForPublicListingPagedListFromJSONTyped(json, false);
}

export function UserDtoForPublicListingPagedListFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDtoForPublicListingPagedList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currentPage': json['currentPage'],
        'totalPages': json['totalPages'],
        'pageSize': json['pageSize'],
        'totalCount': json['totalCount'],
        'hasPrevious': json['hasPrevious'],
        'hasNext': json['hasNext'],
        'items': ((json['items'] as Array<any>).map(UserDtoForPublicListingFromJSON)),
    };
}

export function UserDtoForPublicListingPagedListToJSON(value?: UserDtoForPublicListingPagedList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pageSize': value.pageSize,
        'items': ((value.items as Array<any>).map(UserDtoForPublicListingToJSON)),
    };
}

